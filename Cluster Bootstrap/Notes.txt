node contains the application pod and the database pod

application pod/continer with a external service with a external ip address for a user to connect to from the web

Ingress for the secure http protocol and a domain name that is friendly for the end user
the ingress is hit by the user and the ingress forwards the request to the application pod service

database pod/container with a internal service with a internal ip address to keep security

configmap connected to the application pod/container to get the database information to the user

secret connected to the application pod/container to keep the url the configmap uses to connect to the database a secret using base64 encoded format

volume is attatched as a physical storrage to the database pod/container or in a remote storage such as a cloud storage or in a on prem data center 
so when it dies you dont loose your data
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
you cant replicate a database pod/container via a deployment because a database has a state which is its data 
if you were to replicate the database it would need to access the same shared data storrage as the other one reading and writing to it would make data inconsistoncys.

statefulset is for stateful apps like databases
databases should be createte using statefulsets and not deployments

statefulset just like deployments would be in charge of replicating the pods just like deployments
scalling them up or scalling them down and making sure the read and writes are syncronised so no database inconsistancies are offered

deploying database applications using statefulsets is hard
it is a common practice to host database outside of the cluster and have the deployments or stateless applications that replicate and scale with no problem inside 
the kubernetes cluster and communicate 
with the external database

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DamonSet is a kubernetes component that automaticly calculates how many replicas are needed based on exsisting nodes

Account Alias
089717950915

sudo vim /etc/hosts
172.31.16.165 master
172.31.82.207 worker1
172.31.89.231 worker2

sudo swapoff -a
=========================================================================
service kubelet status
master
ssh -i ~/.ssh/k8s-node.pem ubuntu@34.229.85.107

worker-node-1
ssh -i ~/.ssh/k8s-node.pem ubuntu@54.242.76.35

worker-node-2
ssh -i ~/.ssh/k8s-node.pem ubuntu@54.89.254.252
==========================================================================
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF 

sudo modprobe overlay
sudo modprobe br_netfilter

cat <<EOF |sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net,bridge.bridge-nf-call-iptables   = 1
net.ipv4.ip_forward                         = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sudo sysctl --system 
------------------------------------------------------------------------------------------------------------
sudo apt-get update
sudo apt-get install containerd

sudo mkdir -p /etc/containerd
containerd  config default | sudo tee /etc/containerd/config.toml

sudo systemctl restart containerd

service containerd status

----------------------------------------------------------------------------------------------------------------
1. sudo -i

2. swapoff -a

3. exit

sudo systemctl stop kubelet
sudo systemctl start kubelet
strace -eopenat kubectl version
==========================================================
step 1.
sudo -i

step 2.
vim /etc/containerd/config.toml

Then set SystemdCgroup = true

step 3.
systemctl restart containerd
systemctl restart kubelet

step 4.
exit
=====================================================================================
The -d option is what causes find to display directories (or folders) only. The -f option can be used for files, or the options can be omitted entirely to find both directories and files with the specified name.

Use wildcards in your search if youâ€™re only specifying part of the directory name, like so:

$ find $HOME -type d -name "test*"
===================================================================================