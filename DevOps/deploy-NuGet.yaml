# this yaml kicks off a pipeline when something is updated in a specific folder and is merged to main
# the pull request kicks this off due to the branch pollicy set in the repo in azure DevOps
#NuGet package lifecycle:
#when a developer starts a pr
#the CI gets triggered by the branch policy
#and is postfixed with a -priview
#when it is merged to main the Ci gets triggered again by the main trigger in the yaml and gets versioned without the "-preview"

name: $(major).$(minor).$(patch)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/GovX.Catalogs.Rpc/*  # when anything is changed in this folder kickoff this pipeline
    exclude: 
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  project: '**/GovX.Catalogs.Rpc.csproj'
  major: 1
  minor: 5
  patch: $[counter(format('{0}.{1}', variables['major'], variables['minor']), 0)]
  branchname: $[replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '')]
  isPullRequest: $[eq(variables['Build.Reason'], 'PullRequest')]
  checkPackageVersionType: $[replace(variables['isPullRequest'], 'True', '-preview')]
  packageVersionType: $[replace(variables['checkPackageVersionType'], 'False', '')]
  packageVersion: $(major).$(minor).$(patch)$(packageVersionType)

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: 6.0.101
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: 'Run restore'
    inputs:
      command: 'restore'
      projects: '$(project)'
      feedsToUse: 'select'
      vstsFeed: 'd82ba27b-a9c1-41f8-b3d4-0b79f632133f'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      projects: '$(project)'
      arguments: '--configuration Release --no-restore'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: 'pack'
      packagesToPack: '$(project)'
      configuration: 'Release'
      packDirectory: '$(Build.ArtifactStagingDirectory)/bin'
      nobuild: true
      versioningScheme: 'byEnvVar'
      versionEnvVar: packageVersion

  - task: NuGetCommand@2
    displayName: 'dotnet push'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'd82ba27b-a9c1-41f8-b3d4-0b79f632133f'